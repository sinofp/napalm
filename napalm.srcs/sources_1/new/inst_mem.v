`timescale 1ns / 1ps


module inst_mem (
    input         clk,
    input  [31:0] pc,
    output [31:0] inst
);

  reg [31:0] mem[127:0];
// addi $t0, $0, 100
// addi $t1, $0, 0
// loop:
// addi $t1, $t1, 1
// blt $t1, $0, loop
// sw $t1, 0($0)
  initial begin
    mem[0] = 32'h20090000;
    mem[1] = 32'h21290001;
    mem[2] = 32'hac090000;
    mem[3] = 32'h21290001;
    mem[4] = 32'hac090000;
    mem[5] = 32'h21290001;
    mem[6] = 32'hac090000;
    mem[7] = 32'h21290001;
    mem[8] = 32'hac090000;
    mem[9] = 32'h21290001;
    mem[10] = 32'hac090000;
    mem[11] = 32'h21290001;
    mem[12] = 32'hac090000;
    mem[13] = 32'h21290001;
    mem[14] = 32'hac090000;
    mem[15] = 32'h21290001;
    mem[16] = 32'hac090000;
    mem[17] = 32'h21290001;
    mem[18] = 32'hac090000;
    mem[19] = 32'h21290001;
    mem[20] = 32'hac090000;
    mem[21] = 32'h21290001;
    mem[22] = 32'hac090000;
    mem[23] = 32'h21290001;
    mem[24] = 32'hac090000;
    mem[25] = 32'h21290001;
    mem[26] = 32'hac090000;
    mem[27] = 32'h21290001;
    mem[28] = 32'hac090000;
    mem[29] = 32'h21290001;
    mem[30] = 32'hac090000;
    mem[31] = 32'h21290001;
    mem[32] = 32'hac090000;
    mem[33] = 32'h21290001;
    mem[34] = 32'hac090000;
    mem[35] = 32'h21290001;
    mem[36] = 32'hac090000;
    mem[37] = 32'h21290001;
    mem[38] = 32'hac090000;
    mem[39] = 32'h21290001;
    mem[40] = 32'hac090000;
    mem[41] = 32'h21290001;
    mem[42] = 32'hac090000;
    mem[43] = 32'h21290001;
    mem[44] = 32'hac090000;
    mem[45] = 32'h21290001;
    mem[46] = 32'hac090000;
    mem[47] = 32'h21290001;
    mem[48] = 32'hac090000;
    mem[49] = 32'h21290001;
    mem[50] = 32'hac090000;
    mem[51] = 32'h21290001;
    mem[52] = 32'hac090000;
end

  assign inst = mem[{2'b0, pc[31:2]}];
endmodule
